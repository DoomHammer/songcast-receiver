# Probleme
- [ ] manchmal hängt der cache oder sowas

# Features

- [X] query preset
- [X] either play by URI (both OHZ and OHU/OHM)
- [X] adjust latency correctly
- [X] detect samplerate/format changes and re-open pulseaudio stream appropiately
- [X] finish preset parsing
- [X] OHU forwarding
- [X] handle out of order packets (epoll might help). Use a heap to store frames when previous frames are missing.
- [X] implement resend request
- [X] build code for managing missed frames. sorted list of integers?
- [X] port to async API
- [X] PA_STREAM_ADJUST_LATENCY
- [X] merge preset and ohz resolve code. add a statemachine. have preset, want ohz, have ohz, want ohm...
- [X] handle 100ms timeouts for preset/ohz query
- [X] closing ohm needs to: stop the player, close ohm socket
- [X] if ohz: continually listen for matching zone uri messages and switch if changed
- [X] actually close sockets! (ohz)
- [X] ohm send event could share code with ohm_send_resend_request
- [X] init/destroy for player.c (also to handle null uri)
- [X] handle OHM null URL. could be tested with rebooted DSM. it should send null URL first, then transition to real URI later
- [X] The time when the **previous** frame was sent over the network (if the timestamped flag is on)
- [ ] network timestamp may not be accurate until MediaLatency after clock family change
- [ ] fix handling of stopping stream. make it more robust. can the state cb be used?
      trigger with BUFFER_LATENCY = 3e3 or lower
      maybe unref stream in main thread?
- [ ] send join until audio data, track or metatext is received every 100ms
- [ ] clean shutdown on ctrl-c, send leave message
- [ ] command line interface (preset, uri, stop, quit)
- [ ] check whether destination multicast group matches
- [ ] move data used by write_data thread into it's own struct
- [ ] PLL für remote clock ist wichtig, um jitter zu minimieren
- [ ] average remote clock over last 60s
- [ ] clearly mark data that is accessed from the playback thread (e.g. separate struct)
- [ ] can CACHE_SIZE be reduced?
- [ ] track timestamp of oldest element in cache
- [ ] use monotonic clock
- [ ] use network timestamps if present, probably during parsing?
- [ ] synchronize playback by tweaking the samplerate a little (less then 0.1%, define a maximum acceptable drift)
- [ ] resampling should be optional
- [ ] display codec name
- [ ] display track and metadata
- [ ] set pulseaudio input name to something meaningful
- [ ] tolerate some amount of out-of-order frames? i.e. wait a few frames before sending resend requests?
- [ ] read complete source, read all comments, cleanup
- [ ] CHECK_DEAD_GOTO aus simple.c übernehmen
- [ ] if buffer runs down to 20ms, fade off?
- [ ] fade in once buffer is 100% filled again
- [ ] implement volume control
- [ ] implement just enough of openhome to allow grouping in kazoo. this could happen outside of the c code by controlling using stdio
